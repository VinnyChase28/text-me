import { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Form from "../components/Form";
import Banner from "../components/Banner";
import WeatherCard from "../components/WeatherCard";

const Weather: NextPage = () => {
  //this variable makes a req to the get-weather route with a payload
  const weather = trpc.useQuery([
    "weather.get-weather",
    { lat: 49.319981, lon: -123.072411 },
  ]);

  useEffect(() => {
    console.log(weather?.data?.response);
  }, [weather]);

  const [weatherData, setWeatherData] = useState<any>({
    sky: "",
    temp: "",
    feelsLike: "",
    minTemp: "",
    maxTemp: "",
    country: "",
    name: "",
  });

  useEffect(() => {
    if (weather?.data?.response) {
      console.log("WEATHER DATA", weather.data);
      setWeatherData({
        ...weatherData,
        sky: weather?.data?.response.weather[0]?.description,
        temp: weather?.data?.response.main.temp,
        feelsLike: weather?.data?.response.main.feels_like,
        minTemp: weather?.data?.response.main.temp_min,
        maxTemp: weather?.data?.response.main.temp_max,
        country: weather?.data?.response.sys.country,
        name: weather?.data?.response.name,
      });
    }
  }, [weather?.data?.response]);

  return (
    <>
      <Head>
        <title>Weather</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col justify-center p-4">
        <Banner>
          {weather ? (
            <div className="grid gap-3 pt-3 mt-3 text-center md:grid-cols-4">
              <WeatherCard>{`${weatherData.name}, ${weatherData.country}`}</WeatherCard>
              <WeatherCard>{weatherData.sky}</WeatherCard>
              <WeatherCard>{`${weatherData.temp}째C`}</WeatherCard>
              <WeatherCard>{`Feels like ${weatherData.feelsLike}째C`}</WeatherCard>
              <WeatherCard>{`Low ${weatherData.minTemp}째C`}</WeatherCard>
              <WeatherCard>{`High ${weatherData.maxTemp}째C`}</WeatherCard>
            </div>
          ) : (
            <p>Loading..</p>
          )}
        </Banner>

        <Form
          name="Weather"
          api="weather"
          api_id={1}
          description="Get weather reminders whenever you need them"
        />
      </main>
    </>
  );
};

export default Weather;
